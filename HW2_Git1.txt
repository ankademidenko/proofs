GIT Homework 

JSON
 1. Создать внешний репозиторий c названием JSON.
 in Git: Repositories - New - Repository name - JSON - Public

 2. Клонировать репозиторий JSON на локальный компьютер.
in GitBash: git clone repository_link

 3. Внутри локального JSON создать файл “new.json”.
 cd JSON
 touch new.json

 4. Добавить файл под гит.
 git add new.json

 5. Закоммитить файл.
 git commit -m "new file"

 6. Отправить файл на внешний GitHub репозиторий.
 git push

 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
 vim new.json
 i
 {
	"ФИО":"Демиденко Анна Владимировна",
	"Возраст":"22",
	"Количество домашних животных":"0 :(",
	"Будущая желаемая зарплата":"1500 условных единиц"
 }

 8. Отправить изменения на внешний репозиторий.
 git commit -am "update"
 git push

 9. Создать файл preferences.json
 touch preferences.json

 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 vim preferences.json
 i
 {
 	"Любимый фильм":"Гарри Поттер",
	"Любимая еда":"Любая",
	"Любимое время года":"Май-июнь"
 }
 
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 > skills.json
 vim skills.json
 {
	"theory":"SDLC, STLC, bug reporting, testing documentation, etc",
	"client-server architecture":"request, response, structure",
	"JSON, XML":"structure",
	"tools":"DevTool, Postman, Fidler, Jmeter and other"
 }
 
 12. Отправить сразу 2 файла на внешний репозиторий.
 git add .
 git commit -m "new files"
 git push
 
 13. На веб интерфейсе создать файл bug_report.json.
 add file - create new file - name: bug_report.json
 
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commit new file
 
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 open bug_report.json - Edit this file 
 {
  "id":1,
  "summary":"Button [Open] is not clickable on the main page",
  "expected result":"[Open] clickable",
  "actual result":"[Open] not clickable",
  "severity":"blocker",
  "priority":"ASAP"
}
 
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 commit changes
 
 17. Синхронизировать внешний и локальный репозиторий JSON
 git pull


XML
 18. Создать внешний репозиторий c названием XML.
 in Git: Repositories - New - Repository name - XML - Public
 
 19. Клонировать репозиторий XML на локальный компьютер.
 in GitBash: git clone repository_link
 
 20. Внутри локального XML создать файл “new.xml”.
 cd XML
 > new.xml
 
 21. Добавить файл под гит.
 git add .
 
 22. Закоммитить файл.
 git commit -m "new file"
 
 23. Отправить файл на внешний GitHub репозиторий.
 git push
 
 24. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 vim new.xml
 i
 <FIO>Demidenko Anna Vladimirovna</FIO>
 <age>22</age>
 <pets>no unfortunately</pets>
 <salary>1500</salary>
 
 25. Отправить изменения на внешний репозиторий.
 git commit -am "update"
 git push
 
 26. Создать файл preferences.xml
 > preferences.xml
 
 27. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 <film>Harry Potter</film>
 <food>mushrooms</food>
 <season>may-june</season>
 
 28. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 <theory>SDLC, STLC, bug reporting, testing documentation, etc</theory>
 <client-server architecture>request, response, structure</client-server architecture>
 <JSON,XML>structure</JSON,XML>
 <tools>DevTool, Postman, Fidler, Jmeter and other</tools>
 
 29. Сделать коммит в одну строку.
 git add .
 git commit -m "new files"
 
 30. Отправить сразу 2 файла на внешний репозиторий.
 git push
 
 31. На веб интерфейсе создать файл bug_report.xml.
 add file - create new file - name: bug_report.xml
 
 32. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 commit new file
 
 33. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 open bug_report.xml - Edit this file
 <id>1</id>
<summary>Button [Open] is not clickable on the main page</summary>
<expected result>[Open] clickable</expected result>
<actual result>[Open] not clickable</actual result>
<severity>blocker</severity>
<priority>ASAP</priority>

 34. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
commit changes

 35. Синхронизировать внешний и локальный репозиторий XML
 in gitBash: git pull
